type Query {
    awCtqQuoteConfig (
        websiteId: Int @doc(description: "Website ID.")
    ): awCtqQuoteConfig @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Config") @doc(description: "The query returns information about Quote Config") @cache(cacheable: false)
    awCtqQuoteList (
        customerId: Int!
    ): [awCtqQuote] @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\CtqQuoteList") @doc(description: "The query returns information about Quotes") @cache(cacheable: false)
    awCtqQuoteById (
        id: Int! @doc(description: "Quote entity id.")
    ): awCtqQuote @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\CtqQuoteById") @doc(description: "The query returns information about Quote") @cache(cacheable: false)
    awCtqQuoteByHash (
        quote_hash: String! @doc(description: "Quote hash.")
    ): awCtqQuote @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\CtqQuoteByHash") @doc(description: "The query returns information about Quote") @cache(cacheable: false)
    awCtqQuoteIsAllowedForCustomerGroup (
        customerGroupId: Int!
    ): Boolean @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\IsAllowedForCustomerGroup") @doc(description: "Is Allowed request a quote for customer group information") @cache(cacheable: false)
    awCtqQuoteGetCommentAttachment (
        fileName: String! @doc(description: "File name.")
        commentId: Int! @doc(description: "Quote comment id.")
        quoteHash: String! @doc(description: "The unique hash of a `Quote` object.")
    ): awCtqQuoteCommentAttachment @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\CommentAttachmentById") @doc(description: "The query returns information about Quote comment attachment") @cache(cacheable: false)
}

type Mutation {
    awCtqCreateEmptyQuoteList: String @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\CreateEmptyQuoteList") @doc(description:"Create an empty quote list for a guest or logged in user")
    awCtqAddCommentToCartItem(input: awCtqAddCommentToCartItemInput @doc(description: "Input params to add comment")): [awCtqQuoteCartItem] @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Cart\\AddCommentToCartItem") @doc(description:"The mutation to request a quote")
    awCtqRequestQuoteList(input: awCtqRequestQuoteListInput @doc(description: "Input params to request quote list")): awCtqQuote @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\RequestQuoteList") @doc(description:"The mutation to request a quote list")
    awCtqBuyQuoteList(input: awCtqBuyQuoteInput @doc(description: "Input params to buy quote list")): String! @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\BuyQuoteList") @doc(description:"The mutation returns the unique hash of a `Cart` object.")
    awCtqChangeStatus(input: awCtqChangeStatusInput @doc(description: "Input params to change status quote list")): Boolean @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\ChangeStatus") @doc(description:"The mutation to request a boolean")
    awCtqAddCommentToQuoteList(input: awCtqAddCommentInput @doc(description: "Input params to add comment to quote list")): awCtqQuoteComment @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\AddCommentToQuoteList") @doc(description:"The mutation to request quote comment")
    awCtqClearCart(input: awCtqClearCartInput @doc(description: "Input params to clear quote list cart")): Boolean @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Cart\\ClearCart") @doc(description:"The mutation to request a boolean")
    awCtqCopyQuoteList(input: awCtqCopyQuoteListInput @doc(description: "Input params copy quote list")): awCtqQuote @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Mutation\\Quote\\CopyQuote") @doc(description:"The mutation to request a quote list")
}

input awCtqAddCommentToCartItemInput @doc(description: "Add comment the specified items in the cart.") {
    cart_hash: String! @doc(description: "The unique hash of a `Cart` object.")
    cart_items: [CartItemUpdateInput!]! @doc(description: "An array of items to be updated.")
}

input CartItemUpdateInput @doc(description: "A single item to be updated.") {
    cart_item_id: Int!
    comment: String @doc(description: "Comment for the cart item")
}

input awCtqRequestQuoteListInput @doc(description: "Request quote list") {
    cart_hash: String! @doc(description: "The unique hash of a `Cart` object.")
    quote_name: String! @doc(description: "Quote name")
    comment: String! @doc(description: "Comment for the quote")
    attachments: [awCtqCommentAttachmentInput] @doc(description: "Quote comment attachment input")
}

input awCtqCommentAttachmentInput @doc(description: "Quote comment attachment input") {
    name: String @doc(description: "Attachment file name")
    file_name: String @doc(description: "Attachment file name on the server")
}

input awCtqBuyQuoteInput @doc(description: "Byu quote list input") {
    quote_hash: String! @doc(description: "The unique hash of a `Quote` object.")
}

input awCtqChangeStatusInput @doc(description: "Change status quote information") {
    quote_hash: String! @doc(description: "The unique hash of a `Quote` object.")
    status: String! @doc(description: "Only two have statuses `pending` or `decline`")
}

input awCtqAddCommentInput @doc(description: "Add comment to quote list input") {
    quote_hash: String! @doc(description: "The unique hash of a `Quote` object.")
    comment: String! @doc(description: "Comment for the quote")
    attachments: [awCtqCommentAttachmentInput] @doc(description: "Quote comment attachment input")
}

input awCtqClearCartInput @doc(description: "Add comment to quote list input") {
    cart_hash: String! @doc(description: "The unique hash of a `Cart` object.")
}

input awCtqCopyQuoteListInput @doc(description: "Copy quote list") {
    quote_hash: String! @doc(description: "The unique hash of a `Quote` object.")
}

type awCtqQuote {
    id: Int @doc(description: "Quote Id")
    cart_id: Int @doc(description: "Quote Cart Id")
    cart: awCtqQuoteCart @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\Cart") @doc(description: "Quote Cart")
    customer_id: Int @doc(description: "Quote Customer Id")
    name: String @doc(description: "Quote Name")
    created_at: String @doc(description: "Quote Created At")
    last_updated_at: String @doc(description: "Quote Last Updated At")
    status: awCtqQuoteStatus @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\Status")
    seller_id: Int @doc(description: "Quote Seller Id")
    cc_email_receiver: String @doc(description: "Quote CC email receiver")
    reminder_date: String @doc(description: "Quote Reminder Date")
    expiration_date: String @doc(description: "Quote Expiration Date")
    reminder_status: String @doc(description: "Quote Reminder Status")
    store_id: Int @doc(description: "Quote Store Id")
    negotiated_discount_type: awCtqQuoteNegotiatedDiscountType @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\NegotiatedDiscountType")
    negotiated_discount_value: Float @doc(description: "Quote Negotiated Discount Value")
    base_quote_total: Float @doc(description: "Quote Base Quote Total")
    base_quote_total_negotiated: Float @doc(description: "Base Quote Total Negotiated")
    quote_total_negotiated: Float @doc(description: "Quote Total Negotiated")
    order_id: Int @doc(description: "Quote Order Id")
    customer_email: String @doc(description: "Quote Customer Email")
    customer_first_name: String @doc(description: "Quote Customer First Name")
    customer_last_name: String @doc(description: "Quote Customer Last Name")
    hash: String @doc(description: "Quote Hash")
    is_price_visible: Boolean @doc(description: "Quote Is Price Visible")
    comments: [awCtqQuoteComment] @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\Comments")
    history: [awCtqQuoteHistory] @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\History")
}

type awCtqQuoteConfig @doc(description: "Quote config information") {
    is_quote_list_enabled: Boolean @doc(description: "Flag to check whether cart to quote module is enabled")
    minimum_quote_subtotal: Int @doc(description: "Minimum subtotal for a quote request")
}

type awCtqQuoteStatus @doc(description: "Quote status") {
    value: String @doc(description: "Quote status value")
    label: String @doc(description: "Quote status label")
}

type awCtqQuoteNegotiatedDiscountType @doc(description: "Quote Negotiated Discount Type") {
    value: String @doc(description: "Quote negotiated discount value")
    label: String @doc(description: "Quote negotiated discount label")
}

type awCtqQuoteOwnerType @doc(description: "Quote owner type") {
    value: String @doc(description: "Quote owner value")
    label: String @doc(description: "Quote owner label")
}

type awCtqQuoteCart @doc(description: "Quote cart information") {
    id: String @doc(description: "Quote Id")
    items: [awCtqQuoteCartItem] @resolver(class: "\\Aheadworks\\CtqGraphQl\\Model\\Resolver\\Quote\\CartItems") @doc(description: "Quote cart item")
    shipping_amount: Float @doc(description: "Quote shipping amount")
    subtotal_amount: Float @doc(description: "Quote subtotal amount")
    tax_amount: Float @doc(description: "Quote tax amount")
    order_total_amount: Float @doc(description: "Quote order total amount")
}

type awCtqQuoteCartItem @doc(description: "Quote cart item information") {
    id: String @doc(description: "Quote item id")
    sku: String @doc(description: "Quote item sku")
    name: String @doc(description: "Quote item name")
    qty: Int @doc(description: "Quote item qty")
    price: Float @doc(description: "Quote item price")
    comment: String @doc(description: "Quote item comment")
}

type awCtqQuoteHistoryAction @doc(description: "Quote history actions information") {
    type: awCtqQuoteHistoryActionType @doc(description: "Quote history action type")
    status: awCtqQuoteStatus @doc(description: "Quote history action status")
    name: String @doc(description: "Quote history action name")
    old_value: String @doc(description: "Quote history action old value")
    value: String @doc(description: "Quote history action value")
    actions: awCtqQuoteHistoryActionArray @doc(description: "Quote history action")
}

type awCtqQuoteHistoryActionArray @doc(description: "Quote history action information") {
    type: awCtqQuoteHistoryActionType @doc(description: "Quote history action type")
    status: awCtqQuoteStatus @doc(description: "Quote history action status")
    name: String @doc(description: "Quote history action name")
    old_value: String @doc(description: "Quote history action old value")
    value: String @doc(description: "Quote history action value")
    actions: [awCtqQuoteHistoryAction] @doc(description: "Quote history action")
}

type awCtqQuoteHistoryActionType @doc(description: "Quote history action type information") {
    value: String @doc(description: "Quote history actions type value")
    label: String @doc(description: "Quote history actions type label")
}

type awCtqQuoteComment @doc(description: "Quote comment information") {
    id: Int @doc(description: "Quote comment id")
    quote_id: Int @doc(description: "Quote comment Quote Id")
    created_at: String @doc(description: "Quote comment created at")
    comment: String @doc(description: "Quote comment")
    owner_id: Int @doc(description: "Quote comment owner id")
    attachments: [awCtqQuoteCommentAttachment] @doc(description: "Quote comment attachment")
}

type awCtqQuoteCommentAttachment @doc(description: "Quote comment attachment information") {
    attachment_id: Int @doc(description: "Quote comment attachment id")
    comment_id: Int @doc(description: "Quote comment id ")
    name: String @doc(description: "Attachment file name")
    file_name: String @doc(description: "Attachment file name on the server")
}

type awCtqQuoteHistory @doc(description: "Quote history information") {
    id: Int @doc(description: "Quote history id")
    quote_id: Int @doc(description: "Quote id ")
    status: awCtqQuoteStatus @doc(description: "Quote history status ")
    created_at: String @doc(description: "Quote history created at")
    owner_type: String @doc(description: "Quote history owner Type")
    actions: [awCtqQuoteHistoryAction] @doc(description: "Quote history actions")
}
