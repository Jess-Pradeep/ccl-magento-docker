type Query {
    awReqListGetList (
        filter: awReqListFilterInput
        pageSize: Int = 100
        currentPage: Int = 1
    ): awReqListSearchResult @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\List") @doc(description: "The query returns information about Requisition Lists") @cache(cacheable: false)

    awReqListGetListById (
        list_id: Int! @doc(description: "List Id.")
    ): awReqList @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\ListById") @doc(description: "The query returns information about Requisition List") @cache(cacheable: false)
}

type Mutation {
    awReqListAddItem(
        list_id: Int! @doc(description: "List Id.")
        item: awReqListItemInput! @doc(description: "Input Item params")
    ): [awReqListItem] @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\AddItem") @doc(description:"Add new item to list")

    awReqListMoveItem(
        item_id: Int! @doc(description: "Item Id")
        list_id_to_move: Int! @doc(description: "List Id To Move")
    ): awReqListItem @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\MoveItem") @doc(description:"Move item to another list")

    awReqListCreateList(
        name: String! @doc(description: "List Name")
        description: String @doc(description: "List Description")
    ): awReqList @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\CreateList") @doc(description:"Create new requisition list")

    awReqListUpdateList(
        list_id: Int! @doc(description: "List Id")
        name: String @doc(description: "List Name")
        description: String @doc(description: "List Description")
    ): awReqList @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\UpdateList") @doc(description:"Update requisition list")

    awReqListDeleteList(
        list_id: Int! @doc(description: "List Id")
    ): Boolean @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\DeleteList") @doc(description:"Delete requisition list")

    awReqListUpdateListItemOptions(
        item_id: Int! @doc(description: "Item Id")
        options: awReqListUpdateItemInput! @doc(description: "Item Options")
    ): awReqListItem @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\UpdateItemOptions") @doc(description:"Update options for requisition list item")

    awReqListDeleteListItem(
        item_id: Int! @doc(description: "Item Id")
    ): Boolean @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\DeleteItem") @doc(description:"Delete requisition list item")

    awReqListUpdateListItemQty(
        item_id: Int! @doc(description: "Item Id")
        qty: Int! @doc(description: "Product Qty")
    ): awReqListItem @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\UpdateQty") @doc(description:"Update qty for requisition list item")

    awReqListAddItemsToCart(
        item_ids: [Int!] @doc(description: "Item Ids")
        list_id: Int! @doc(description: "List Id")
        cart_id: String! @doc(description: "Cart Id")
    ): Int @doc(description: "Total Added Items") @resolver(class: "\\Aheadworks\\RequisitionListsGraphQl\\Model\\Resolver\\Mutation\\List\\Item\\AddToCart") @doc(description:"Add To Cart Requisition List Items")
}

type awReqListSearchResult {
    total_count: Int
    items: [awReqList]
    page_info: awReqListPageInfo
}

type awReqListPageInfo {
    page_size: Int
    current_page: Int
}

input awReqListFilterInput {
    list_id: FilterTypeInput
    name: FilterTypeInput
    description: FilterTypeInput
    customer_id: FilterTypeInput
    shared: FilterTypeInput
    updated_at: FilterTypeInput
    or: awReqListFilterInput
}

type awReqList {
    list_id: Int @doc(description: "List Id")
    name: String @doc(description: "List Name")
    description: String @doc(description: "List Description")
    customer_id: Int @doc(description: "List Customer Id")
}

type awReqListItem @doc(description: "List item information") {
    item_id: Int @doc(description: "Item id")
    list_id: Int @doc(description: "Item List id")
    product_id: String @doc(description: "Product Id")
    product_name: String @doc(description: "Product Name")
    product_sku: String @doc(description: "Product Sku")
    product_qty: Int @doc(description: "Product Qty")
    product_type: String @doc(description: "Product Type")
}

input awReqListItemInput @doc(description: "Add an item to the specified list.") {
    sku: String! @doc(description: "Product Sku")
    qty: Int @doc(description: "Product Qty")
    bundle_options: [awReqListBundleProductOption]
    configurable_options: [awReqListConfigurableProductOption]
    custom_options: [awReqListProductCustomOption]
    grouped_options: [awReqListGroupedProductOption]
    downloadable_links: [awReqListDownloadableLinks]
}

input awReqListUpdateItemInput @doc(description: "Add an item to the specified list.") {
    bundle_options: [awReqListBundleProductOption]
    configurable_options: [awReqListConfigurableProductOption]
    custom_options: [awReqListProductCustomOption]
    grouped_options: [awReqListGroupedProductOption]
    downloadable_links: [awReqListDownloadableLinks]
}

input awReqListDownloadableLinks {
    link_id: Int! @doc(description: "Downloadable Link Id")
}

input awReqListConfigurableProductOption {
    attribute_id: Int! @doc(description: "Attribute Id")
    option_id: Int! @doc(description: "Option Id")
}

input awReqListProductCustomOption {
    option_id: Int! @doc(description: "Option Id")
    option_type_id: Int! @doc(description: "Option Type Id")
}

input awReqListBundleProductOption {
    option_id: Int! @doc(description: "Option Id")
    link_id: Int! @doc(description: "Link Id")
    qty: Int! @doc(description: "Qty")
}

input awReqListGroupedProductOption {
    option_id: Int! @doc(description: "Option Id")
    qty: Int! @doc(description: "Qty")
}
